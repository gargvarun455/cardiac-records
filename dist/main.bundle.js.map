{"version":3,"sources":["/home/varun/production/cardiac-records/src/$_lazy_route_resource lazy","/home/varun/production/cardiac-records/src/app/app-routing.module.ts","/home/varun/production/cardiac-records/src/app/app.component.css","/home/varun/production/cardiac-records/src/app/app.component.html","/home/varun/production/cardiac-records/src/app/app.component.ts","/home/varun/production/cardiac-records/src/app/app.module.ts","/home/varun/production/cardiac-records/src/app/contact/contact.component.css","/home/varun/production/cardiac-records/src/app/contact/contact.component.html","/home/varun/production/cardiac-records/src/app/contact/contact.component.ts","/home/varun/production/cardiac-records/src/app/dashboard/dashboard.component.css","/home/varun/production/cardiac-records/src/app/dashboard/dashboard.component.html","/home/varun/production/cardiac-records/src/app/dashboard/dashboard.component.ts","/home/varun/production/cardiac-records/src/app/home/home.component.css","/home/varun/production/cardiac-records/src/app/home/home.component.html","/home/varun/production/cardiac-records/src/app/home/home.component.ts","/home/varun/production/cardiac-records/src/app/login/login.component.css","/home/varun/production/cardiac-records/src/app/login/login.component.html","/home/varun/production/cardiac-records/src/app/login/login.component.ts","/home/varun/production/cardiac-records/src/app/register/register.component.css","/home/varun/production/cardiac-records/src/app/register/register.component.html","/home/varun/production/cardiac-records/src/app/register/register.component.ts","/home/varun/production/cardiac-records/src/app/services/auth.service.ts","/home/varun/production/cardiac-records/src/app/services/crypto.service.ts","/home/varun/production/cardiac-records/src/environments/environment.ts","/home/varun/production/cardiac-records/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/varun/production/cardiac-records/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  {\n    path: 'home',\n    component: HomeComponent,\n    children: [\n      { path: '', redirectTo: 'login', pathMatch: 'full' },\n      { path: 'login', component: LoginComponent },\n      { path: 'register', component: RegisterComponent }\n    ]\n  },\n  { path: 'contact', component: ContactComponent },\n  { path: 'dashboard', component: DashboardComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/varun/production/cardiac-records/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".header{\\n    font-weight: bolder;\\n    font-size: 16px;\\n}\\n\\n.header-brand{\\n    font-size: 20px;\\n    margin-right: 10px;\\n}\\n\\n.footer{\\n    min-height: 20px;\\n    padding: 5px;\\n    font-size: 16px;\\n    background: rgb(211, 200, 200);\\n    font-style: italic;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/varun/production/cardiac-records/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-default navbar-fixed-top header\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#header-links\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a class=\\\"navbar-brand header-brand\\\" routerLink=\\\"/\\\">Dr Ashwani's Archive</a>\\n        </div>\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"header-links\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li routerLinkActive=\\\"active\\\">\\n                    <a routerLink=\\\"/home\\\">Home</a>\\n                </li>\\n                <li routerLinkActive=\\\"active\\\">\\n                    <a routerLink=\\\"/contact\\\">Contact Us</a>\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n</nav>\\n<div>\\n    <router-outlet></router-outlet>\\n</div>\\n<nav class=\\\"navbar navbar-default navbar-fixed-bottom footer\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"navbar-right font-weight-bold\\\">\\n            © Created & Maintained by\\n            <a href=\\\"https://www.linkedin.com/in/varun-garg-59425467/\\\" target=\\\"_blank\\\">Varun Garg</a>\\n        </div>\\n    </div>\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/varun/production/cardiac-records/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n  constructor() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/varun/production/cardiac-records/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http' \n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthService } from './services/auth.service';\nimport { CryptoService } from './services/crypto.service';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    ContactComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [ AuthService, CryptoService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/varun/production/cardiac-records/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/varun/production/cardiac-records/src/app/contact/contact.component.css\n// module id = ../../../../../src/app/contact/contact.component.css\n// module chunks = main","module.exports = \"<p>\\n  contact works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/varun/production/cardiac-records/src/app/contact/contact.component.html\n// module id = ../../../../../src/app/contact/contact.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/varun/production/cardiac-records/src/app/contact/contact.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/varun/production/cardiac-records/src/app/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<br>\\n<br>\\n<br>\\n<br>\\n<br>\\n<br>\\n<br>\\n<br>\\n<p>\\n  WElcome {{username}}\\n</p>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/varun/production/cardiac-records/src/app/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/dashboard/dashboard.component.html\n// module chunks = main","/// <reference types=\"crypto-js\" />\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CryptoService } from '../services/crypto.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  username: string;\n\n  constructor(private crypto: CryptoService, \n              private router: Router) { }\n\n  ngOnInit() {\n    if (!sessionStorage.auth) {\n      this.router.navigate(['/']);\n    }\n    else{\n      this.username = this.crypto.decrypt(sessionStorage.getItem(\"auth\"));\n    }\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/varun/production/cardiac-records/src/app/dashboard/dashboard.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".welcome-text{\\n    font-size: 18px;\\n}\\n\\n.home-css{\\n    margin-top: 80px;\\n    margin-bottom: 80px;\\n}\\n\\n.home-panel{\\n    padding: 0px 10px 10px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/varun/production/cardiac-records/src/app/home/home.component.css\n// module id = ../../../../../src/app/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container home-css\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-sm-6 col-md-7 text-center\\\">\\n      <h3 class=\\\"font-weight-bold well well-sm\\\">Welcome to Dr. Ashwani's Archive</h3>\\n      <div class=\\\"img-responsive hidden-xs\\\">\\n        <img src=\\\"../../assets/images/cardiac.jpg\\\" class=\\\"img-responsive center-block\\\" alt=\\\"Cardiac Image\\\">\\n      </div>\\n      <h5 class=\\\"text-justify panel-body hidden-xs welcome-text\\\">This is the archive of the patients with or without cardiac history. You can register with us and create a profile\\n        on this website. We will monitor your stats and guide you regarding your cardiac health. You can also post any queries\\n        and we will guide you.</h5>\\n    </div>\\n    <div class=\\\"col-xs-12 col-sm-6 col-md-5\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/varun/production/cardiac-records/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/varun/production/cardiac-records/src/app/home/home.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".login-form{\\n    padding: 0px 10px 10px;\\n    margin-top: 20px;\\n}\\n\\n.login-title{\\n    text-align: center;\\n    margin-bottom: 10px;  \\n    font-size: 30px;\\n}\\n\\nlabel{\\n    position: relative;\\n    top: 15px;\\n    left: 8px;\\n    background: white;\\n    padding: 0px 5px;\\n    font-style: italic;\\n    text-align: center;    \\n}\\n\\n.form-group{    \\n    margin-bottom: 0px;\\n}\\n\\n.button-login{\\n    margin: 25px 0px 10px 0px;\\n}\\n\\n.button-register{\\n    margin: 25px 10px 10px 10px;\\n    -ms-flex-item-align: center;\\n        -ms-grid-row-align: center;\\n        align-self: center;\\n}\\n\\ninput{\\n    height: 50px\\n}\\n\\n.form-control.ng-touched.ng-invalid{\\n    border: 2px solid red;\\n}\\n\\n.form-control.ng-touched.ng-valid{\\n    border: 2px solid green;\\n}\\n\\n.error-text{\\n    margin-left: 5px;\\n}\\n\\n.alert{\\n    margin-bottom: 0px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/varun/production/cardiac-records/src/app/login/login.component.css\n// module id = ../../../../../src/app/login/login.component.css\n// module chunks = main","module.exports = \"<form class=\\\"panel panel-primary login-form\\\" [formGroup]='loginForm' (ngSubmit)=\\\"userLogin(loginForm.value)\\\">\\n  <h3 class=\\\"login-title\\\">Login</h3>\\n  <div class=\\\"alert alert-danger\\\"\\n       *ngIf=\\\"authFailed\\\">\\n     Invalid username or password\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"username\\\">Username</label>\\n    <input type=\\\"text\\\" \\n      (change)=\\\"log(loginForm)\\\"\\n      formControlName=\\\"username\\\" \\n      class=\\\"form-control\\\" \\n      id=\\\"username\\\">\\n    <ol class=\\\"alert alert-danger\\\" \\n      *ngIf=\\\"!loginForm.controls['username'].valid && loginForm.controls['username'].touched\\\">\\n      <li class=\\\"error-text\\\"\\n        *ngIf=\\\"loginForm.controls['username'].errors.required\\\">\\n        Username is required\\n      </li>\\n      <li class=\\\"error-text\\\"\\n        *ngIf=\\\"loginForm.controls['username'].errors.minlength || loginForm.controls['username'].errors.maxlength\\\">\\n         Username length should be between 5 and 15\\n      </li>\\n      <li class=\\\"error-text\\\"\\n        *ngIf=\\\"loginForm.controls['username'].errors.pattern\\\">\\n        Username can contain only alphanumericals\\n      </li>\\n    </ol>\\n  </div>\\n  <div class=\\\"form-group\\\">    \\n    <label for=\\\"password\\\">Password</label>\\n    <input type=\\\"password\\\" \\n      formControlName=\\\"password\\\" \\n      class=\\\"form-control\\\" \\n      id=\\\"password\\\">\\n    <ol class=\\\"alert alert-danger\\\" \\n      *ngIf=\\\"!loginForm.controls['password'].valid && loginForm.controls['password'].touched\\\">\\n      <li class=\\\"error-text\\\"\\n        *ngIf=\\\"loginForm.controls['password'].errors.required\\\">\\n        Password is required\\n      </li>\\n      <li class=\\\"error-text\\\"\\n        *ngIf=\\\"loginForm.controls['password'].errors.minlength || loginForm.controls['password'].errors.maxlength\\\">\\n        Password length should be between 8 and 15\\n      </li>\\n      <li class=\\\"error-text\\\"\\n        *ngIf=\\\"loginForm.controls['password'].errors.pattern\\\">\\n        Password can contain alphanumericals or '@,#,!,%,^,&'\\n      </li>\\n    </ol>\\n  </div>\\n  <button [disabled]=\\\"!loginForm.valid\\\" \\n    type=\\\"submit\\\" \\n    class=\\\"btn btn-primary btn-lg btn-block button-login\\\">\\n    Login\\n  </button>\\n</form>\\n<div class=\\\"text-center\\\">\\n  <h5>Doesn't have an account?\\n    <a routerLink=\\\"/home/register\\\">\\n      <strong>\\n        <ins>Register Now</ins>\\n      </strong>\\n    </a>\\n  </h5>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/varun/production/cardiac-records/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { CryptoService } from '../services/crypto.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\ndeclare var jquery:any;\ndeclare var $ :any;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  authResponse: any = { username: '', authenticated: '' };\n  loginForm: FormGroup;\n  post: any;\n  description: string = \"\";\n  name: string = \"\";\n  authFailed = false;\n\n  constructor(private crypto: CryptoService, \n              private authService: AuthService,\n              private router: Router, \n              private fb: FormBuilder) {\n    this.loginForm = fb.group({\n      'username': [null, Validators.compose(\n        [Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(15),\n        Validators.pattern(\"[a-zA-Z][a-zA-Z0-9]+\")])],\n      'password': [null, Validators.compose(\n        [Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(15),\n        Validators.pattern(\"[a-zA-Z0-9@#!%^&]+\")])],\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  userLogin(form) {\n    this.authFailed = false;\n    this.authService.authenticateUser(form.username, form.password)\n      .subscribe((res) => this.authResponse = res,\n      (err) => console.log(err),\n      () => {\n        if (this.authResponse.authenticated) {\n          sessionStorage.auth = this.crypto.encrypt(form.username);\n          this.router.navigate(['/dashboard']);\n        }\n        else{\n          this.authFailed = true;\n          this.loginForm.reset();\n          //this.loginForm.controls['username'].setValue(\"\");\n        }\n      });\n  }\n\n  log(x) {\n    console.log(x);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/varun/production/cardiac-records/src/app/login/login.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".register-form{\\n    padding: 0px 10px 10px;\\n    margin-top: 20px;\\n}\\n\\n.register-title{\\n    text-align: center;\\n    margin-bottom: 10px;  \\n    font-size: 30px;\\n}\\n\\nlabel{\\n    position: relative;\\n    top: 15px;\\n    left: 8px;\\n    background: white;\\n    padding: 0px 5px;\\n    font-style: italic;\\n    text-align: center;    \\n}\\n\\n.form-group{\\n    margin-bottom: 0px;\\n}\\n\\n.button-register{\\n    margin: 25px 0px 10px 0px;\\n}\\n\\ninput{\\n    height: 50px\\n}\\n\\n.error-text{\\n    margin-left: 5px;\\n}\\n\\n.form-control.ng-touched.ng-invalid{\\n    border: 2px solid red;\\n}\\n\\n.form-control.ng-touched.ng-valid{\\n    border: 2px solid green;\\n}\\n\\n.alert{\\n    margin-bottom: 0px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/varun/production/cardiac-records/src/app/register/register.component.css\n// module id = ../../../../../src/app/register/register.component.css\n// module chunks = main","module.exports = \"<form class=\\\"panel panel-primary register-form\\\" [formGroup]='registerForm' (ngSubmit)=\\\"userRegister(registerForm.value)\\\">\\n  <h3 class=\\\"register-title\\\">Register</h3>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"username\\\">Username</label>\\n    <input type=\\\"username\\\" \\n           formControlName=\\\"username\\\" e\\n           (change)=\\\"verifyUsername()\\\"\\n           class=\\\"form-control\\\" \\n           id=\\\"username\\\">\\n    <ol\\n      class=\\\"alert alert-danger\\\" \\n      *ngIf=\\\"!registerForm.controls['username'].valid && registerForm.controls['username'].touched\\\">\\n      <li class=\\\"error-text\\\"\\n        *ngIf=\\\"registerForm.controls['username'].errors.required\\\">\\n        Username is required\\n      </li>\\n      <li class=\\\"error-text\\\"\\n        *ngIf=\\\"registerForm.controls['username'].errors.minlength || registerForm.controls['username'].errors.maxlength\\\">\\n        Username length should be between 5 and 15\\n      </li>\\n      <li class=\\\"error-text\\\"\\n        *ngIf=\\\"registerForm.controls['username'].errors.pattern\\\">\\n        Username can contain only alphanumericals\\n      </li>\\n    </ol>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"emailid\\\">Email Id</label>\\n    <input type=\\\"email\\\" \\n           (change)=\\\"log(registerForm)\\\"\\n           formControlName=\\\"emailid\\\" \\n           class=\\\"form-control\\\" \\n           id=\\\"emailid\\\">\\n    <ol\\n      class=\\\"alert alert-danger\\\" \\n      *ngIf=\\\"!registerForm.controls['emailid'].valid && registerForm.controls['emailid'].touched\\\">\\n      <li class=\\\"error-text\\\"\\n        *ngIf=\\\"registerForm.controls['emailid'].errors.required\\\">\\n        Email Id is required\\n      </li>\\n      <li class=\\\"error-text\\\"\\n        *ngIf=\\\"registerForm.controls['emailid'].errors.email\\\">\\n        Invalid email id\\n      </li>\\n    </ol>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"password\\\">Password</label>\\n    <input type=\\\"password\\\" \\n           formControlName=\\\"password\\\" \\n           class=\\\"form-control\\\" \\n           id=\\\"password\\\">\\n    <ol class=\\\"alert alert-danger\\\" \\n      *ngIf=\\\"!registerForm.controls['password'].valid && registerForm.controls['password'].touched\\\">\\n      <li class=\\\"error-text\\\"\\n        *ngIf=\\\"registerForm.controls['password'].errors.required\\\">\\n        Password is required\\n      </li>\\n      <li class=\\\"error-text\\\"\\n        *ngIf=\\\"registerForm.controls['password'].errors.minlength || registerForm.controls['password'].errors.maxlength\\\">\\n        Password length should be between 8 and 15\\n      </li>\\n      <li class=\\\"error-text\\\"\\n        *ngIf=\\\"registerForm.controls['password'].errors.pattern\\\">\\n        Password can contain alphanumericals or '@,#,!,%,^,&'\\n      </li>\\n    </ol>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"confirmpass\\\">Confirm Password</label>\\n    <input type=\\\"password\\\" \\n           formControlName=\\\"confirmPass\\\" \\n           class=\\\"form-control\\\" \\n           id=\\\"confirmpass\\\">\\n    <ol class=\\\"alert alert-danger\\\" \\n      *ngIf=\\\"!registerForm.controls['confirmPass'].valid && registerForm.controls['confirmPass'].touched\\\">\\n      <li class=\\\"error-text\\\"\\n        *ngIf=\\\"registerForm.controls['confirmPass'].errors.notEquivalent\\\">\\n        Passwords don't match\\n      </li>\\n    </ol>\\n  </div>\\n  <button [disabled]=\\\"!registerForm.valid\\\" \\n          type=\\\"submit\\\" \\n          class=\\\"btn btn-primary btn-lg btn-block button-register\\\">\\n          Register\\n  </button>\\n</form>\\n<div class=\\\"text-center\\\">\\n  <h5>Already have an account?\\n    <strong>\\n      <ins>\\n        <a routerLink=\\\"/home/login\\\">Log In</a>\\n      </ins>\\n    </strong>\\n  </h5>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/varun/production/cardiac-records/src/app/register/register.component.html\n// module id = ../../../../../src/app/register/register.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { CryptoService } from '../services/crypto.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  user: any;\n  registerForm: FormGroup;\n\n  constructor(private crypto: CryptoService,\n    private authService: AuthService,\n    private router: Router,\n    private fb: FormBuilder) {\n    this.registerForm = fb.group({\n      'username': [null, Validators.compose(\n        [Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(15),\n        Validators.pattern(\"[a-zA-Z][a-zA-Z0-9]+\")])],\n      'password': [null, Validators.compose(\n        [Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(15),\n        Validators.pattern(\"[a-zA-Z0-9@#!%^&]+\")])],\n      'confirmPass': [null, Validators.compose(\n        [Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(15),\n        Validators.pattern(\"[a-zA-Z0-9@#!%^&]+\")])],\n      'emailid': [null, Validators.compose(\n        [Validators.required,\n        Validators.email])]\n    }, { validator: this.matchPasswords('password', 'confirmPass') });\n  }\n\n  ngOnInit() {\n  }\n\n  verifyUsername() {\n    this.authService\n      .verifyUsername(this.registerForm.controls['username'].value)\n      .subscribe((res) => this.user = res,\n      (err) => console.log(err),\n      () => {\n        console.log(this.user);\n      });\n  }\n\n  matchPasswords(password: string, confirmPass: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[password],\n        confirmPassInput = group.controls[confirmPass];\n      if (passwordInput.value !== confirmPassInput.value) {\n        return confirmPassInput.setErrors({ notEquivalent: true })\n      }\n      else {\n        return confirmPassInput.setErrors(null);\n      }\n    }\n  }\n\n  log(x) {\n    console.log(x);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/varun/production/cardiac-records/src/app/register/register.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { HttpClient } from '@angular/common/http';\nimport { CryptoService } from './crypto.service';\nimport { environment } from '../../environments/environment';\n\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class AuthService {\n  \n  constructor(private crypto: CryptoService, \n              private http: Http,\n              private httpC: HttpClient) { }\n\n  authenticateUser(username: string, password: string) {\n    var cryptpassword = this.crypto.encrypt(password);\n    var request = { username: username, \n                    password: cryptpassword};\n    return this.http.post('/api/authUser', request)\n      .map((res: Response) => res.json());\n  }\n\n  verifyUsername(username: string){ \n    return this.httpC.get('/api/user/' + username);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/varun/production/cardiac-records/src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport * as CryptoJS from 'crypto-js';\n\n@Injectable()\nexport class CryptoService {  \n\n  constructor() { }\n\n  encrypt(myString: string): string{\n    return CryptoJS.AES.encrypt(myString, environment.secret_key).toString();\n  }\n\n  decrypt(encryptedString: string): string{\n    return CryptoJS.AES.decrypt(encryptedString, environment.secret_key).toString(CryptoJS.enc.Utf8);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/varun/production/cardiac-records/src/app/services/crypto.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  secret_key: \"cardiac-records-key\"\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/varun/production/cardiac-records/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/varun/production/cardiac-records/src/main.ts"],"sourceRoot":"webpack:///"}